# Generated by Django 3.2.16 on 2022-12-08 05:35

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workbooks', '0001_initial'),
        ('masters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Name')),
                ('name_en_us', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('name_ja', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('name_ar', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('name_ko', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('name_hi', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('name_es', models.CharField(db_index=True, max_length=255, null=True, verbose_name='Name')),
                ('date_event', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('date_event_en_us', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('date_event_ja', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('date_event_ar', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('date_event_ko', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('date_event_hi', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('date_event_es', models.DateField(blank=True, null=True, verbose_name='Date Event')),
                ('start_ts', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('start_ts_en_us', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('start_ts_ja', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('start_ts_ar', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('start_ts_ko', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('start_ts_hi', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('start_ts_es', models.DateTimeField(blank=True, null=True, verbose_name='Start Datetime')),
                ('end_ts', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('end_ts_en_us', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('end_ts_ja', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('end_ts_ar', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('end_ts_ko', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('end_ts_hi', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('end_ts_es', models.DateTimeField(blank=True, null=True, verbose_name='Finish Datetime')),
                ('user_update', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': '001 Academics Event',
                'unique_together': {('name', 'date_event')},
            },
        ),
        migrations.CreateModel(
            name='StudentEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_update', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masters.course', verbose_name='Course')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.event', verbose_name='Event')),
                ('user_traceability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workbooks.usertraceability', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'StudentEvent',
                'verbose_name_plural': '002 Academics Student Event',
                'unique_together': {('event', 'course', 'user_traceability')},
            },
        ),
        migrations.CreateModel(
            name='StudentEventTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('no', models.IntegerField(verbose_name='No')),
                ('no_en_us', models.IntegerField(null=True, verbose_name='No')),
                ('no_ja', models.IntegerField(null=True, verbose_name='No')),
                ('no_ar', models.IntegerField(null=True, verbose_name='No')),
                ('no_ko', models.IntegerField(null=True, verbose_name='No')),
                ('no_hi', models.IntegerField(null=True, verbose_name='No')),
                ('no_es', models.IntegerField(null=True, verbose_name='No')),
                ('score', models.IntegerField(default='0')),
                ('user_update', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('student_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.studentevent', verbose_name='Student Event')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masters.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'StudentEventTask',
                'verbose_name_plural': '003 Workbooks Student Event Task',
                'unique_together': {('student_event', 'task')},
            },
        ),
        migrations.CreateModel(
            name='StudentEventTaskAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_update', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='masters.answer', verbose_name='Answer')),
                ('student_event_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.studenteventtask', verbose_name='Student Event Task')),
            ],
            options={
                'verbose_name': 'StudentEventTaskAnswer',
                'verbose_name_plural': '004 Workbooks Student Event Task Answer',
                'unique_together': {('student_event_task', 'answer')},
            },
        ),
    ]
