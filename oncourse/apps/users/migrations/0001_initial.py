# Generated by Django 3.2.16 on 2022-12-07 13:50

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=250, verbose_name='Complete Name')),
                ('name_en_us', models.CharField(max_length=250, null=True, verbose_name='Complete Name')),
                ('name_ja', models.CharField(max_length=250, null=True, verbose_name='Complete Name')),
                ('name_ar', models.CharField(max_length=250, null=True, verbose_name='Complete Name')),
                ('name_ko', models.CharField(max_length=250, null=True, verbose_name='Complete Name')),
                ('name_hi', models.CharField(max_length=250, null=True, verbose_name='Complete Name')),
                ('name_es', models.CharField(max_length=250, null=True, verbose_name='Complete Name')),
                ('birth_city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_city_en_us', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_city_ja', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_city_ar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_city_ko', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_city_hi', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_city_es', models.CharField(blank=True, max_length=100, null=True, verbose_name='Birth City')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('birth_date_en_us', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('birth_date_ja', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('birth_date_ar', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('birth_date_ko', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('birth_date_hi', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('birth_date_es', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=1, null=True, verbose_name='Gender')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('address_en_us', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('address_ja', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('address_ar', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('address_ko', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('address_hi', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('address_es', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('mobile', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('mobile_en_us', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('mobile_ja', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('mobile_ar', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('mobile_ko', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('mobile_hi', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('mobile_es', models.CharField(blank=True, max_length=64, null=True, verbose_name='Mobile')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Create')),
                ('modified', models.DateTimeField(blank=True, null=True, verbose_name='Modified')),
                ('user_update', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
